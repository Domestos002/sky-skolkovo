@import "../variables"

@mixin respond-to($media)
	@if $media == sm
		@media only screen and (max-width: $small - 1) //479
			@content

	@else if $media == md
		@media only screen and (max-width: $medium - 1)	//767
			@content

	@else if $media == lg
		@media only screen and (max-width: $large - 1) //959
			@content

	@else if $media == dk
		@media only screen and (max-width: $desktop - 1) //1023
			@content

	@else if $media == xlg
		@media only screen and (max-width: $xlarge - 1) //1219
			@content

@mixin min-respond-to($media)
	@if $media == sm
		@media only screen and (min-width: $small)
			@content

	@else if $media == md
		@media only screen and (min-width: $medium)
			@content

	@else if $media == lg
		@media only screen and (min-width: $large)
			@content

	@else if $media == dk
		@media only screen and (min-width: $desktop)
			@content

	@else if $media == xlg
		@media only screen and (min-width: $xlarge)
			@content

=trans($trans: all 0.2s ease 0s)
	transition: $trans

=pos($var)
	@if $var == tm
		+transform(translateY(-50%))
		top: 50%
	@if $var == lm
		+transform(translateX(-50%))
		left: 50%
	@if $var == m
		+transform(translate3d(-50%, -50%, 0))
		top: 50%
		left: 50%

=phc($color)
	&::-webkit-input-placeholder
		color: $color
		opacity: 1
	&::-moz-placeholder
		color: $color
		opacity: 1
	&:-moz-placeholder
		color: $color
		opacity: 1
	&:-ms-input-placeholder
		color: $color
		opacity: 1

=fluid-columns($columns, $spaces, $mb)
	display: flex
	flex-wrap: wrap
	flex-direction: row
	margin-right: calc(#{$spaces} / 2 * (-1))
	margin-left: calc(#{$spaces} / 2 * (-1))
	position: relative
	margin-top: -$mb
	justify-content: center
	& > div
		box-sizing: border-box
		padding-top: $mb
		width: calc(1 / #{$columns} * 100%)
		padding-left: calc(#{$spaces} / 2)
		padding-right: calc(#{$spaces} / 2)

=chevron($size, $border-size, $direction, $color)
	z-index: 1
	content: ''
	display: inline-block
	width: $size
	height: $size
	background: transparent
	@if $direction == t
		border: transparent
		border-top: $border-size solid $color
		border-left: $border-size solid $color
	@else if $direction == r
		border: transparent
		border-top: $border-size solid $color
		border-right: $border-size solid $color
	@else if $direction == b
		border: transparent
		border-bottom: $border-size solid $color
		border-right: $border-size solid $color
	@else if $direction == l
		border: transparent
		border-bottom: $border-size solid $color
		border-left: $border-size solid $color


=box_sizing($params)
	-webkit-box-sizing: $params
	-moz-box-sizing: $params
	box-sizing: $params

=box_shadow($params)
	-webkit-box-shadow: $params
	-moz-box-shadow: $params
	box-shadow: $params

=transition($params)
	-webkit-transition: $params
	-moz-transition: $params
	-o-transition: $params
	transition: $params

=transform($params)
	-webkit-transform: $params
	-moz-transform: $params
	-ms-transform: $params
	-o-transform: $params
	transform: $params

=border_radius($params)
	-webkit-border-radius: $params
	-moz-border-radius: $params
	border-radius: $params

@import '_retina_sprites'
